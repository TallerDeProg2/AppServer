/users #LISTO
  get
/users/{userId}/trips #LISTO
  get
/users/{userId}/location #LISTO
	get
/trips #LISTO
	get
	post
/trips/{tripId} #LISTO
	get
/trips/{tripId}/cost #Me parece q es mas una propiedad de Trip
	get
/trips/{tripId}/paths #Direccionamiento, caminos sugeridos #LISTO (estimativo)
	get
/trips/{tripId}/paths/{pathId} #Un camino sugerido en particular #LISTO (estimativo)
	get
/passengers #LISTO
  post
  get
/passengers/{passengerId} #LISTO
  get
  put
  delete
/drivers #LISTO
	get
	post
/drivers/{driverId} #LISTO
	get
	put
	delete
/drivers/{driverId}/cars #LISTO
	get
	post	
/drivers/{driverId}/cars/{carId} #LISTO
	get
	put
	delete
/paymentMethod #Agregar?????


#----------------FALTA-------------
#tags y security de todos
#definicion con la info para CREAR un usuario

paths:
  /users:
  	get:
  		tags:
  		security:
  		description: "Devuelve todos los usuarios en el sistema"
  		responses:
  			200:
  				description:	"Todos los usuarios en el sistema"
  				schema:
  					properties:
  						usersData:
  							$ref: "#/definitions/UsersData"
  			500:
  				description: "Error inesperado"
  				schema:
  					$ref: "#/definitions/Error"
  		summary: "Listado de usuarios en el sistema"
  /passengers:
  	get:
  		tags:
  		security:
  		description: "Devuelve todos los pasajeros en el sistema"
  		responses:
  			200:
  				description:	"Todos los pasajeros en el sistema"
  				schema:
  					properties:
  						usersData:
  							$ref: "#/definitions/Passengers"
  			500:
  				description: "Error inesperado"
  				schema:
  					$ref: "#/definitions/Error"
  		summary: "Listado de pasajeros en el sistema"
  	post:
      tags:
      security:
      description: "Endpoint para dar de alta un pasajero"
      parameters:
        - description: "Datos para dar de alta un pasajero"
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ApplicationUserCreate" #Crear uno con los datos q les vamos a pedir
      responses:
        201:
          description: "Alta correcta"
          schema:
            properties:
              user:
                $ref: '#/definitions/Passengers'
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Dar de alta un pasajero"
  /passengers/{passengerId}:
  	parameters:
      - description: "Identificador del pasajero"
        in: path
        name: passengerId
        required: true
        type: string
    delete:
      tags:
      security:
      description: "Endpoint para dar de baja un pasajero"
      responses:
        204:
          description: "Baja correcta"
        404:
          description: "No existe el recurso solicitado"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Eliminar un pasajero de la aplicación"
    get:
      tags:
      security:
      description: "Devuelve toda la información del pasajero"
      responses:
        200:
          description: "Información del pasajero"
          schema:
            properties:
              userData:
                $ref: "#/definitions/Passengers" #Esto comprende personalData y paymentData?
        404:
          description: "Pasajero inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Obtener información de un pasajero"
    put:
      tags:
      security:
      description: "Modificación de los datos de un pasajero"
      parameters:
        - description: Datos para modificar al pasajero
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ApplicationUserCreate"  #Crear uno con los datos q les vamos a pedir
      responses:
        200:
          description: "Modificación correcta"
          schema:
            properties:
              user:
                $ref: "#/definitions/Passengers"
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "No existe el recurso solicitado"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: Conflicto en el update (esta mal el valor de `_ref`) #VER Q ES ESTO
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Actualización de información de un pasajero"
  /drivers:
  	get:
  		tags:
  		security:
  		description: "Devuelve todos los conductores en el sistema"
  		responses:
  			200:
  				description:	"Todos los conductores en el sistema"
  				schema:
  					properties:
  						usersData:
  							$ref: "#/definitions/Drivers"
  			500:
  				description: "Error inesperado"
  				schema:
  					$ref: "#/definitions/Error"
  		summary: "Listado de conductores en el sistema"
  	post:
      tags:
      security:
      description: "Endpoint para dar de alta un conductor"
      parameters:
        - description: "Datos para dar de alta un conductor"
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ApplicationUserCreate" #Crear uno con los datos q les vamos a pedir
      responses:
        201:
          description: "Alta correcta"
          schema:
            properties:
              user:
                $ref: '#/definitions/Drivers'
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Dar de alta un conductor"
  /drivers/{driverId}:
  	parameters:
      - description: "Identificador del conductor"
        in: path
        name: driverId
        required: true
        type: string
    delete:
      tags:
      security:
      description: "Endpoint para dar de baja un conductor"
      responses:
        204:
          description: "Baja correcta"
        404:
          description: "No existe el recurso solicitado"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Eliminar un conductor de la aplicación"
    get:
      tags:
      security:
      description: "Devuelve toda la información del conductor"
      responses:
        200:
          description: "Información del conductor"
          schema:
            properties:
              userData:
                $ref: "#/definitions/Drivers" 
        404:
          description: "Conductor inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Obtener información de un conductor"
    put:
      tags:
      security:
      description: "Modificación de los datos de un conductor"
      parameters:
        - description: Datos para modificar al conductor
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ApplicationUserCreate"  #Crear uno con los datos q les vamos a pedir
      responses:
        200:
          description: "Modificación correcta"
          schema:
            properties:
              user:
                $ref: "#/definitions/Drivers"
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "No existe el recurso solicitado"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: Conflicto en el update (esta mal el valor de `_ref`) #VER Q ES ESTO-->algo de los tokens, los tokens tienen q coincidir (tienem q ser la misma version)
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Actualización de información de un conductor"
  /drivers/{driverId}/cars:
  	parameters:
      - description: "Identificador del conductor"
        in: path
        name: driverId
        required: true
        type: string
    get:
      tags:
        - app
        - user
      security:
        - ApplicationToken: []
        - BusinessToken: []
      description: |
          Devuelve toda la información acerca de todos los autos del conductor.
      responses:
        200:
          description: Autos del conductor
          schema:
            properties:
              cars:
                $ref: '#/definitions/Car'
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      summary: Listado de autos de un usuario
    post:
      tags:
        - app
      security:
        - ApplicationToken: []
      description: "Endpoint para dar de alta un auto de un usuario"
      parameters:
        - description: |
            Datos del auto, se ignorarán los campos de `id`, `_ref` y `owner`
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Car"
      responses:
        201:
          description: "Alta correcta"
          schema:
            properties:
              metadata:
                $ref: '#/definitions/EntityMetadata'
              car:
                $ref: '#/definitions/Car'
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Dar de alta un auto de un conductor"
  /drivers/{driverId}/cars/{carId}:
  	parameters:
      - description: "Identificador del conductor"
        in: path
        name: driverId
        required: true
        type: string
      - description: "Identificador del auto"
        in: path
        name: carId
        required: true
        type: string
    delete:
      tags:
        - app
        - manager
      security:
        - ApplicationToken: []
        - BusinessToken: []
      description: "Endpoint para dar de baja un auto"
      responses:
        204:
          description: "Baja correcta"
        404:
          description: "No existe el recurso solicitado"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Eliminar el auto"
    get:
      tags:
        - app
        - user
      security:
        - ApplicationToken: []
        - BusinessToken: []
      description: "Devuelve toda la información del auto"
      responses:
        200:
          description: "Información del auto"
          schema:
            properties:
              car:
                $ref: "#/definitions/Car"
        404:
          description: "Auto inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Obtener información de un auto"
    put:
      tags:
        - app
      security:
        - ApplicationToken: []
      description: "Modificación de los datos de un auto"
      parameters:
        - description: Datos nuevos del auto
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Car"
      responses:
        200:
          description: "Modificación correcta"
          schema:
            properties:
              car:
                $ref: "#/definitions/Car"
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "No existe el recurso solicitado"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: Conflicto en el update (esta mal el valor de `_ref`)
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Actualizar información de un auto"
  /users/{userId}/trips:
  	parameters:
      - description: "Identificador del usuario"
        in: path
        name: userId #Ver si cambiar por passengerId o driverId o directamente meterles id a todos
        required: true
        type: string
    get:
      tags:
        - app
        - user
      security:
        - ApplicationToken: []
        - BusinessToken: []
      description: |
          Devuelve toda la información acerca de todos los viajes del usuario.
      responses:
        200:
          description: Viajes del usuario
          schema:
            properties:
              trips:
                $ref: '#/definitions/Trip'
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: Listado de viajes de un usuario
  /trips:
  	get:
      tags:
        - user
      security:
        - BusinessToken: []
      description: |
          Devuelve toda la información acerca de los viajes
      responses:
        200:
          description: "Todos los viajes indicados"
          schema:
            properties:
              trips:
                $ref: "#/definitions/Trip"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Listado de viajes"
    post:
      tags:
        - app
      security:
        - ApplicationToken: []
      description: "Dar de alta un viaje"
      parameters:
        - description: |
            Datos para dar de alta un viaje.
          in: body
          name: body
          required: true
          schema:
            properties:
              trip:
                $ref: '#/definitions/Trip'
              paymethod:
                $ref: '#/definitions/PayMethod'
      responses:
        201:
          description: "Alta correcta"
          schema:
            properties:
              trip:
                $ref: "#/definitions/Trip"
        400:
          description: "Incumplimiento de precondiciones (parámetros faltantes)"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Dar de alta un viaje"
  /trips/{tripId}:
  	parameters:
      - description: "Identificador del viaje"
        in: path
        name: tripId
        required: true
        type: string
    get:
      tags:
        - app
        - user
      security:
        - ApplicationToken: []
        - BusinessToken: []
      description: "Devuelve toda la información del viaje"
      responses:
        200:
          description: "Información del viaje"
          schema:
            properties:
              trip:
                $ref: "#/definitions/Trip"
        404:
          description: "Viaje inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Obtener información de un viaje"
  /trips/{tripId}/paths: #Estimativo, hay q ver como relacionarlo con la API de Google
		get:
      tags:
        - user
      security:
        - BusinessToken: []
      description: |
          Devuelve los caminos recomendados
      responses:
        200:
          description: "Todos los caminos recomendados"
          schema:
            properties:
              paths:
                $ref: "#/definitions/Path"
        500:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      summary: "Listado de caminos recomendados"
  /trips/{tripId}/paths/{pathId}:
  	parameters:
      - description: "Identificador del viaje"
        in: path
        name: tripId
        required: true
        type: string
      - description: "Identificador del camino"
        in: path
        name: pathId
        required: true
        type: string
    get:
      tags:
        - app
        - user
      security:
        - ApplicationToken: []
        - BusinessToken: []
      description: "Devuelve toda la información del camino sugerido"
      responses:
        200:
          description: "Información del camino"
          schema:
            properties:
              trip:
                $ref: "#/definitions/Path"
        404:
          description: "Camino inexistente"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: "Obtener información de un camino sugerido"
  /users/{userId}/location:
  	parameters:
      - description: "Identificador del usuario"
        in: path
        name: userId
        required: true
        type: string
    get:
      tags:
        - app
        - user
      security:
        - ApplicationToken: []
        - BusinessToken: []
      description: |
          Devuelve toda la información acerca de la ubicación del usuario.
      responses:
        200:
          description: Ubicación
          schema:
            properties:
              cars:
                $ref: '#/definitions/Location'
        500:
          description: "Error inesperado"
          schema:
            $ref: "#/definitions/Error"
      summary: Ubicación de un usuario






definitions:
	Id:
	    type: string
	    description: "Identificar univoco de la entidad"  
	UsersData:
		properties:
			idUser:
				type: $ref: '#/definitions/Id'
				description: "id del usuario"
			name:
				type: string
				decription: ""
			lastName:
				type: string
				description: ""
			userName:
				type: string
				decription: ""
			email:
				type: string
				descrition: ""
			location:
				type: $ref: '#/definitions/Location'
	Location:
    	description: "Las coordenadas utilizan la especificación de [GeoJSON](https://geojson.org/geojson-spec.html#coordinate-reference-system-objects)donde `lon` es el primer número, mientras `lat` el segundo"
	    properties:
	      lat:
	        type: number
	      lon:
	        type: number

	Drivers:
		properties:
			personalData:
				type: $ref: '#/definitions/UserData'
				description: "id del usuario"
			car:
				type: $ref: '#/definitions/Car'
				description: "id del usuario"
			ranking:
	Passengers:
		properties:
			personalData:
				type: $ref: '#/definitions/UserData'
				description: "id del usuario"
			paymentData:
	PaymentData:
		properties:
			cash:
				type: bool
				description: ""	
			creditCard:
				type: string
				description: "id del usuario"
	CreditCard:
		properties:
			carNumber:
			securityNumber:
			expirationDate:

	Trip:
		properties:
			idTrip:
			origin:
			destiny:
			cost:
	Cost:
		type:
		description:
	Car:
		properties:
		  Brand:
	        type: string
	        description: Marca
	      Model:
	        type: string
	        description: Modelo
	      Plate:
	        type: string
	        description: Patente
	      Year:
	        type: integer
	        description: Año
	      Color:
	        type: string
	        description: Color
	      State:
	        type: string
	        description: Estado actual del automovil
	      Radio:
	        type: number
	        description: Posee radio
	      Music:
	        type: bool
	        description: Permite escuchar musica
	      AirConditioning:
	        type: bool
	        description: Posee aire acondicionado
	      Others:
	        type: string
	        description: Descripcion y/u otras caracterisicas opcionales
  Error:
	  properties:
	    code:
	      format: int32
	      type: integer
	    message:
	      type: string
	  type: object



